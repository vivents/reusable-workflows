name: kube-deploy-test

env:
  cluster_name: "MAINCLUSTER"
  cluster_resource_group: "VIME-KUBERNETES-MAINCLUSTER"
  cluster_namespace: "vime-test"
  image_prefix: "vime"

on:
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string
        description: The name of the image to build / deploy
      manifests:
        required: true
        type: string
        description: The kubernetes manifests to deploy
      container_registry_url:
        required: true
        type: string
        description: The URL of the container registry the image should be stored at
    secrets:
      # required infrastructure secrets
      azure_credentials:
        required: true
      container_registry_password:
        required: true
      container_registry_username:
        required: true
      gh_access_token:
        required: true
      # application secrets, only required for some services
      secret:
        required: false
      jitsi_secret:
        required: false
      database_url:
        required: false
      sendinblue_api_key:
        required: false

jobs:
  deploy:
    name: Build and deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      # Login to the azure container registry to be able to push the image
      - uses: Azure/docker-login@v1
        with:
          login-server: ${{ inputs.container_registry_url }}
          username: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}

      # Required for build-push-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          # platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ inputs.container_registry_url }}/${{ env.image_prefix }}/${{ inputs.image_name }}:${{ github.event.release.tag_name }}
          build-args: |
            GH_ACCESS_TOKEN=${{ secrets.gh_access_token }}
          cache-from: type=gha
          cache-to: type=gha

      # Set the target AKS cluster for the following kubernetes actions
      - uses: Azure/aks-set-context@v1
        with:
          creds: "${{ secrets.AZURE_CREDENTIALS }}"
          cluster-name: "${{ env.cluster_name }}"
          resource-group: "${{ env.cluster_resource_group }}"

      - name: Create kubernetes secret with database url
        # the dry run / piping syntax is a required workaround for updating
        # an existing secret using the cli
        run: |
          if [ "${{ secrets.database_url }}" != "" ]
          then
            kubectl create secret generic ${{ inputs.image_name }}-secrets \
            --namespace=${{ env.cluster_namespace }} \
            --from-literal=DATABASE_URL="${{ secrets.database_url }}" \
            --dry-run=client \
            -o yaml \
            | kubectl apply -f -
          fi
        
      - uses: Azure/k8s-deploy@v1.2
        with:
          manifests: ${{ inputs.manifests }}
          images: |
            ${{ inputs.container_registry_url }}/${{ env.image_prefix}}/${{ inputs.image_name }}:${{ github.event.release.tag_name }}
          namespace: ${{ env.cluster_namespace }}